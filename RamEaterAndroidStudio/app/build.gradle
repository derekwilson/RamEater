import groovy.swing.SwingBuilder

apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "derekwilson.net.rameater"
        minSdkVersion 7
        targetSdkVersion 21
        versionCode 6
        versionName "1.0.2"
    }

    signingConfigs {
        release {
            storeFile file("../../AndroidSupport/deploy/derek.keystore")
            storePassword "not real password"
            keyAlias "rameater"
            keyPassword "not real password"
        }
    }

    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(':app:assembleRelease')) {
            def password = ""

            if (System.console() == null) {
                new SwingBuilder().edt {
                    dialog(modal: true,
                            title: "Enter signing password",
                            alwaysOnTop: true,
                            resizable: false,
                            locationRelativeTo: null,
                            pack: true,
                            show: true
                    ) {
                        vbox {
                            label(text: "Enter signing password: ")
                            input = passwordField()
                            button(defaultButton: true,
                                    text: 'OK',
                                    actionPerformed: {
                                        password = new String(input.password)
                                        dispose();
                                    })
                        }
                    }
                }
            } else {
                password = System.console().readPassword("\nEnter password: ")
                password = new String(password)
            }

            if (password.size() <= 0) {
                throw new InvalidUserDataException("Empty password")
            }

            // set signing config key passwords
            android.signingConfigs.release.storePassword = password
            android.signingConfigs.release.keyPassword = password
        }
    }

    // Customise the output apk filename to be "recommender-buildtype-version.apk"
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def manifestParser = new com.android.builder.core.DefaultManifestParser()
                def fileName = outputFile.name.replace("app-", "rameater-")
                fileName = fileName.replace(".apk", "-" + android.defaultConfig.versionName + ".apk")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'NOTICE'
        exclude 'APK LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // android support libs
    compile 'com.android.support:support-v4:23.2.1'
    compile 'com.android.support:appcompat-v7:23.2.1'
	compile 'com.android.support:design:23.2.1'
}
