import groovy.swing.SwingBuilder

apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion '28.0.2'

    defaultConfig {
        applicationId "derekwilson.net.rameater"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 8
        versionName "1.0.4"
    }

    signingConfigs {
        release {
            storeFile file("../../AndroidSupport/deploy/derek.keystore")
            storePassword "not real password"
            keyAlias "rameater"
            keyPassword "not real password"
        }
    }

    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(':app:assembleRelease')) {
            // if you get a headless error from gradle build java.awt.HeadlessException
            // stop the daemon by using
            // gradlew --stop
            System.setProperty("java.awt.headless", "false");
            def password = ""

            if (System.console() == null) {
                new SwingBuilder().edt {
                    dialog(modal: true,
                            title: "Enter signing password",
                            alwaysOnTop: true,
                            resizable: false,
                            locationRelativeTo: null,
                            pack: true,
                            show: true
                    ) {
                        vbox {
                            label(text: "Enter signing password: ")
                            input = passwordField()
                            button(defaultButton: true,
                                    text: 'OK',
                                    actionPerformed: {
                                        password = new String(input.password)
                                        dispose();
                                    })
                        }
                    }
                }
            } else {
                password = System.console().readPassword("\nEnter password: ")
                password = new String(password)
            }

            if (password.size() <= 0) {
                throw new InvalidUserDataException("Empty password")
            }

            // set signing config key passwords
            android.signingConfigs.release.storePassword = password
            android.signingConfigs.release.keyPassword = password
        }
    }

    // Customise the output apk filename to be "recommender-buildtype-version.apk"
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "rameater-${variant.name}-${variant.versionName}.apk"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'NOTICE'
        exclude 'APK LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // android support libs
    implementation 'com.android.support:support-v4:26.0.2'
    implementation 'com.android.support:appcompat-v7:26.0.2'
    implementation 'com.android.support:design:26.0.2'
}
